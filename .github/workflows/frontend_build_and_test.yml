name: Frontend Build and Test

on:
  workflow_dispatch:

jobs:
  Build-and-Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18.13.0
          
      - name: Cache node_modules
        id: cache-clt
        uses: actions/cache@v2
        with:
          path: ./frontend/node_modules
          key: clt-modules-${{ hashFiles('./frontend/package-lock.json') }}
          
      - name: Build
        if: steps.cache-clt.outputs.cache-hit != 'true'
        working-directory: ./frontend
        run: npm install
     
      - name: Run Unit Tests
        working-directory: ./frontend
        run: npm run unit-tests-once


  SonarCloud-Analysis:
      runs-on: ubuntu-latest
      needs: [Build-and-Test]
      steps:
        - name: Checkout
          uses: actions/checkout@v3
          
        - name: Analyze with SonarCloud
          uses: sonarsource/sonarcloud-github-action@master
          with:
            args: >
              -Dsonar.organization=amazingitorg
              -Dsonar.projectKey=amazing-people-frontend
              -Dsonar.qualitygate.wait=true
              -Dsonar.javascript.lcov.reportPaths=lcov.info
              -Dsonar.sources=./frontend/src/app
              -Dsonar.verbose=true
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_FRONTEND_TOKEN }}
            
  Snyk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18.13.0
          
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: ./frontend/node_modules
          key: modules-${{ hashFiles('./frontend/package-lock.json') }}

      - name: Build
        if: steps.cache.outputs.cache-hit != 'true'
        working-directory: ./frontend
        run: |
          npm i
      
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.snyk_token }}
        with:
          args: --file=./frontend/package.json --package-manager=npm

