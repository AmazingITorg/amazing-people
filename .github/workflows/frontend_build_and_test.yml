name: Frontend Build and Test

on:
  workflow_dispatch:
  push:
    paths:
      - 'frontend/**'

jobs:
  Build-and-Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18.13.0
          
      - name: Cache node_modules
        id: cache-clt
        uses: actions/cache@v2
        with:
          path: ./frontend/node_modules
          key: clt-modules-${{ hashFiles('./frontend/package-lock.json') }}
          
      - name: Build
        if: steps.cache-clt.outputs.cache-hit != 'true'
        working-directory: ./frontend
        run: npm install
     
      - name: Run Unit Tests
        working-directory: ./frontend
        run: npm run unit-tests-once


  SonarCloud-Analysis:
      runs-on: ubuntu-latest
      needs: [Build-and-Test]
      steps:
        - name: Checkout
          uses: actions/checkout@v3
          
        - name: Analyze with SonarCloud
          uses: sonarsource/sonarcloud-github-action@master
          with:
            args: >
              -Dsonar.organization=amazingitorg
              -Dsonar.projectKey=amazing-people-frontend
              -Dsonar.qualitygate.wait=true
              -Dsonar.javascript.lcov.reportPaths=lcov.info
              -Dsonar.sources=./frontend/src/app
              -Dsonar.verbose=true
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_FRONTEND_TOKEN }}
                
  Build-and-push-docker-image:
    needs: [Build-and-Test, SonarCloud-Analysis, Snyk]
    name: Build and push Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ secrets.DOCKER_NAMESPACE }}/${{ secrets.DOCKER_FRONTEND_REPOSITORY }}
          tags: |
            type=raw,dev
            
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ./frontend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
#       - name: Run Trivy vulnerability scanner
#         uses: aquasecurity/trivy-action@master
#         with:
#           image-ref: "${{ secrets.DOCKER_NAMESPACE }}/${{ secrets.DOCKER_REPOSITORY }}:dev"
#           format: "table"
#           exit-code: "1"
#           ignore-unfixed: true
#           vuln-type: "os,library"
#           severity: "CRITICAL"
  
  Snyk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18.13.0
          
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: ./frontend/node_modules
          key: modules-${{ hashFiles('./frontend/package-lock.json') }}

      - name: Build
        if: steps.cache.outputs.cache-hit != 'true'
        working-directory: ./frontend
        run: |
          npm i
      
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.snyk_token }}
        with:
          args: --file=./frontend/package.json --package-manager=npm

