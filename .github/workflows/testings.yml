name: Backend Build and Test

on:
  workflow_dispatch:

jobs:
  Build-and-Test:
    runs-on: ubuntu-latest
    services:
      # label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:latest
        # service environment variables
        # `POSTGRES_HOST` is `postgres`
        env:
          # optional (defaults to `postgres`)
          POSTGRES_DB: peopledb
          # required
          POSTGRES_PASSWORD: postgresPasswort
          # optional (defaults to `5432`)
          POSTGRES_PORT: 5432
          # optional (defaults to `postgres`)
          POSTGRES_USER: postgresUser
        ports:
          # maps tcp port 5432 on service container to the host
          - 6432:5432
        # set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
      backend:
        # Docker Hub image
        image: cekocvetkov/amazing-people-backend:sha-f619aa79125e1f3c908ab1acd429ebdb1e0c73d0
        env:
          # optional (defaults to `postgres`)
          PGDATABASE: peopledb
          # required
          PGPASSWORD: postgresPasswort
          # optional (defaults to `5432`)
          PGPORT: 6432
          # optional (defaults to `postgres`)
          PGUSER: postgresUser
          PGHOST: localhost
        ports:
          # maps tcp port 5432 on service container to the host
          - 3001:3001
        # set health checks to wait until postgres has started

    steps:
      - name: Checkout
        uses: actions/checkout@v3
  
      - name: Test
        run: |
          sleep 30s
          curl localhost:3001
  
#       - name: Setup node
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18.13.0
          
#       - name: Cache dependencies
#         id: cache
#         uses: actions/cache@v2
#         with:
#           path: ./backend/node_modules
#           key: modules-${{ hashFiles('./backend/package-lock.json') }}

#       - name: Build
#         if: steps.cache.outputs.cache-hit != 'true'
#         working-directory: ./backend
#         run: |
#           npm i
      
#       - name: Code Linting
#         working-directory: ./backend
#         run: |
#           npm run lint
      
#       - name: Unit and Integration Tests
#         working-directory: ./backend
#         id: tests
#         run: |
#           sed -i 's/<PGUSER>/postgresUser/' flyway/flyway.conf
#           sed -i 's/<PGPASSWORD>/postgresPasswort/' flyway/flyway.conf
#           sed -i 's/<PGDATABASE>/peopledb/' flyway/flyway.conf
#           sed -i 's/<PGPORT>/6432/' flyway/flyway.conf
#           sed -i 's/<PGHOST>/localhost/' flyway/flyway.conf
          
#           sed -i 's/<PIPELINE_PGUSER>/postgresUser/' package.json
#           sed -i 's/<PIPELINE_PGHOST>/localhost/' package.json
#           sed -i 's/<PIPELINE_PGPASSWORD>/postgresPasswort/' package.json
#           sed -i 's/<PIPELINE_PGDATABSE>/peopledb/' package.json
#           sed -i 's/<PIPELINE_PGPORT>/6432/' package.json
#           npm run migrate
#           npm run test-in-pipeline
          
#       - name: 'Upload Artifact'
#         uses: actions/upload-artifact@v3
#         with:
#           name: tests-coverage
#           path: ./backend/coverage/lcov.info
#           retention-days: 1

